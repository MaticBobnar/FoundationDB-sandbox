/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import com.apple.foundationdb.Database;
import com.apple.foundationdb.FDB;
import com.apple.foundationdb.Transaction;

import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.logging.Logger;

public class App {
    private static final Logger logger = Logger.getLogger(App.class.getName());

    public static void main(String[] args) throws IOException {
        logger.info("Starting FoundationDB application");

        final String clusterContent = "docker:docker@127.0.0.1:4500";
        logger.info("Creating temporary cluster file");
        final Path tempClusterFile = Files.createTempFile("fdb", ".cluster");
        try (FileWriter writer = new FileWriter(tempClusterFile.toFile())) {
            writer.write(clusterContent);
        }
        logger.info("Cluster file created at: " + tempClusterFile.toString());

        logger.info("Initializing FDB with API version 730");
        final FDB fdb = FDB.selectAPIVersion(730); // match your FDB version, e.g., 7.1.27 â†’ 710

        try (Database db = fdb.open(tempClusterFile.toString())) {
            logger.info("Database connection opened successfully");

            // Write key
            logger.info("Writing key-value pair to database");
            db.run((Transaction tr) -> {
                tr.set("hello".getBytes(), "world".getBytes());
                return null;
            });
            logger.info("Key-value pair written successfully");

            // Read key
            logger.info("Reading value from database");
            final byte[] value = db.run((Transaction tr) -> tr.get("hello".getBytes()).join());
            logger.info("Value read successfully");
            System.out.println("Read value: " + new String(value));
        }

        logger.info("Application completed successfully");
    }
}